
- name: Check console-config namespace exists
  shell: oc get namespace {{ customise_web_console.namespace }}
  register: console_config_check_namespace_exists
  changed_when: false
  failed_when: false

- name: "Get route to hosted javascript file"
  shell: oc get route {{ customise_web_console.route_name }} -n {{ customise_web_console.namespace }} --template '{{ "{{" }}printf "https://%s/%s" .spec.host "{{ customise_web_console.javascript_filename }}"{{ "}}" }}'
  register: get_javascript_url
  changed_when: false
  failed_when: get_javascript_url.rc != 0 and 'not found' not in get_javascript_url.stderr
  when: console_config_check_namespace_exists.rc == 0

- name: "check for changes needed to web console config"
  when:
    - console_config_check_namespace_exists.rc == 0
    - get_javascript_url.stdout != ""
  block:
    - name: "retrieve current openshift web console configmap"
      shell: oc get configmap {{ customise_web_console.web_console.configmap }} -n {{ customise_web_console.web_console.namespace }} --template '{{ "{{" }} index .data "{{ customise_web_console.web_console.configmap_key -}}" {{ "}}" }}'
      register: get_web_console_config
      changed_when: false

    - name: "write current openshift web console config to a temporary file"
      copy: content={{ get_web_console_config.stdout }} dest=/tmp/{{ customise_web_console.web_console.configmap_key }}

    - name: "determine changes needed to the web console configmap"
      yedit:
        src: /tmp/{{ customise_web_console.web_console.configmap_key }}
        key: extensions.scriptURLs
        update: true
        value: "{{ get_javascript_url.stdout }}"
        state: absent
      register: new_web_console_config
      when: get_web_console_config.stdout != ""

# TODO: Should remove this after testing - Probably wouldn't ever need to remove the OSD branding on an OSD cluster
    - name: "Remove OSD Console branding if cluster is OSD"
      import_tasks: osd_branding.yml
      vars: 
        yamlState: "absent"
      when: cluster_type == "osd"

- name: "Remove OSD Console branding for cluster console if cluster is OSD"
  import_tasks: osd_branding_admin_console.yml
  vars:
    branding_value: "ocp"
  when: cluster_type == "osd"
# End of what needs to be removed

- include_role:
    name: namespace
    tasks_from: delete
  vars:
    names:
    - "{{ customise_web_console.namespace }}"
  when: console_config_check_namespace_exists.rc == 0
